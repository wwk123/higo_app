主题色彩:  #ff7070

移动端项目: 基于ionic1.x的 仿HIGO app的网站开发
项目步骤:  (1) 搭建spa页面框架
			     (2) 编写静态页面
			      (3) 使用php来编写页面后台
			      (4) 联合调试
			      (5) 测试
			     (6) 将代码部署在服务器
项目准备:  由于不知道怎么获取app中的数据，所以采用了最笨的办法，先截图，然后按照需求进行切图。

项目的技术架构:
SPA应用：采用ionic实现SPA应用(路由，MVC, $http)
响应式: ionic UI（视图）
服务器端: php实现与数据库的交互(数据库)

一、搭建项目框架
1、创建项目，添加css、js、img、tpl文件夹，添加必须引用的css、js文件，添加自定义的css、js文件以及img图片，并创建完整的引导页面。
2、分析项目需要的页面
                    注册页面
                    登录页面
                    首页
                    新品展示页面(新品)
                    时尚圈
                    消息
                    我的(个人信息)
第一步: 搭建项目框架
        创建index.html 作为完整的页面
        创建代码片段
        配置路由词典
        验证路由词典:

构建路由的问题:    on-touch="jump({{dish.desPath}})",
无法获取对象的属性
通过 on-touch = "jump(dish.desPath)"


ng-class的用法

1   字符串数组形式是针对class简单变化，具有排斥性的变化，true是什么class，false是什么class，其形如;

function Ctr($scope) {
    $scope.isActive = true;
}

<div ng-class="{true: 'active', false: 'inactive'}[isActive]">
</div>
复制代码
其结果是2中组合，isActive表达式为true，则 active，负责inactive。

2  对象key/value处理主要针对复杂的class混合，其形如：


function Ctr($scope) {

}

<div ng-class {'selected': isSelected, 'car': isCar}">
</div>
复制代码


当 isSelected = true 则增加selected class，
当isCar=true,则增加car class，